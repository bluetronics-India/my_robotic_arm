<?xml version="1.0" ?>

<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find my_robotic_arm)/worlds/empty.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find my_robotic_arm)/urdf/arm.xacro'" />
    
    
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model arm -param robot_description"/>
    
    <!-- ros_control robotis manipulator launch file -->
    <include file="$(find my_robotic_arm)/launch/position_controller.launch" />
    <include file="$(find my_robotic_arm)/launch/joints_cmd.launch" />
<!--     <node name="my_robotic_arm_tf_broadcaster" pkg="my_robotic_arm" type="arm_tf_bdcst.py" respawn="false" output="screen"/> -->
    
<!--     <node name="rviz" pkg="rviz" type="rviz" args="-d $(find my_robotic_arm)/arm.rviz" required="true" /> -->
</launch>